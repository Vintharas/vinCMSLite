//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Domain.Entities
{
    public partial class Media : StateObject
    {
        #region Primitive Properties
    
        public int MediaID
        {
            get;
            set;
        }
    
        public string Path
        {
            get;
            set;
        }
    
        public string FileName
        {
            get;
            set;
        }
    
        public int MimeTypeID
        {
            get { return _mimeTypeID; }
            set
            {
                if (_mimeTypeID != value)
                {
                    if (MimeType != null && MimeType.MimeID != value)
                    {
                        MimeType = null;
                    }
                    _mimeTypeID = value;
                }
            }
        }
        private int _mimeTypeID;
    
        public double Size
        {
            get;
            set;
        }
    
        public Nullable<int> Width
        {
            get;
            set;
        }
    
        public Nullable<int> Height
        {
            get;
            set;
        }
    
        public string Extension
        {
            get;
            set;
        }
    
        public Nullable<System.DateTime> UploadDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public MimeType MimeType
        {
            get { return _mimeType; }
            set
            {
                if (!ReferenceEquals(_mimeType, value))
                {
                    var previousValue = _mimeType;
                    _mimeType = value;
                    FixupMimeType(previousValue);
                }
            }
        }
        private MimeType _mimeType;
    
        public FixupCollection<ContentContainer> ContentContainers
        {
            get
            {
                if (_contentContainers == null)
                {
                    var newCollection = new FixupCollection<ContentContainer>();
                    newCollection.CollectionChanged += FixupContentContainers;
                    _contentContainers = newCollection;
                }
                return _contentContainers;
            }
            set
            {
                if (!ReferenceEquals(_contentContainers, value))
                {
                    var previousValue = _contentContainers as FixupCollection<ContentContainer>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupContentContainers;
                    }
                    _contentContainers = value;
                    var newValue = value as FixupCollection<ContentContainer>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupContentContainers;
                    }
                }
            }
        }
        private FixupCollection<ContentContainer> _contentContainers;

        #endregion
        #region Association Fixup
    
        private void FixupMimeType(MimeType previousValue)
        {
            if (previousValue != null && previousValue.Media.Contains(this))
            {
                previousValue.Media.Remove(this);
            }
    
            if (MimeType != null)
            {
                if (!MimeType.Media.Contains(this))
                {
                    MimeType.Media.Add(this);
                }
                if (MimeTypeID != MimeType.MimeID)
                {
                    MimeTypeID = MimeType.MimeID;
                }
            }
        }
    
        private void FixupContentContainers(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ContentContainer item in e.NewItems)
                {
                    if (!item.Media.Contains(this))
                    {
                        item.Media.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ContentContainer item in e.OldItems)
                {
                    if (item.Media.Contains(this))
                    {
                        item.Media.Remove(this);
                    }
                }
            }
        }

        #endregion
    }
}
